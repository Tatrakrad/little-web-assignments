{"version":3,"sources":["planet-list-component.js"],"names":["window","SW","PlanetDetail","props","state","isSelected","setState","currentClass","planetInfo","selectedClass","console","log","planet","orbital_period","rotation_period","diameter","climate","gravity","toggle","name","React","Component","PlanetListComponent","$","ajax","url","data","page","done","apiResult","fail","alert","loadPlanets","planetList","results","map"],"mappings":"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","file":"planet-list-component.js","sourcesContent":["window.SW = window.SW || { };\n\n(function() {\n\n  class PlanetDetail extends React.Component {\n\n    constructor(props){\n      // props.value = props.value || \"\";\n      super(props);\n\n      this.state = {\n        isSelected:false\n      }\n    }\n\n    toggle(){\n      this.setState({\n        isSelected: !this.state.isSelected\n      })\n    }\n\n    render(){\n      var currentClass = 'planet';\n      var planetInfo;\n      var selectedClass;\n\n      if(this.state.isSelected){\n        currentClass += \" on\";\n        console.log('current class',currentClass);\n\n        planetInfo = <div className=\"planet-info\">\n          <ul>\n            <li>Orbital Period {this.props.planet.orbital_period}</li>\n            <li>Rotation Period {this.props.planet.rotation_period}</li>\n            <li>Diameter {this.props.planet.diameter}</li>\n            <li>Climate {this.props.planet.climate}</li>\n            <li>Gravity {this.props.planet.gravity}</li>\n          </ul>\n        </div>\n      }\n\n      return( <li className={currentClass} onClick={() => {this.toggle(); }}>\n        <h3>{this.props.planet.name}</h3>\n        {planetInfo}\n      </li>);\n    }\n\n  }\n\n\n  class PlanetListComponent extends React.Component {\n\n    constructor(){\n      super();\n\n      // this.state = {\n      //   apiResult:{ }\n      // }\n\n    }\n\n    loadPlanets() {\n\n      console.log('load the planets');\n\n      $.ajax({\n        url: 'http://swapi.co/api/planets',\n        data: {page:1}\n      })\n      .done((data) => {\n        console.log('Now, I have Data Now.',data);\n        this.setState({\n          apiResult:data\n        });\n      })\n      .fail(() => {\n        console.log('ajax failed');\n        window.alert('trouble!');\n      })\n\n\n    }//end of loadPlanets function\n\n    componentDidMount() {\n\n      console.log('PlanetListComponent.componentDidMount');\n\n      this.loadPlanets();\n    }\n    componentWillUnmount(){\n      console.log('PlanetListComponent.componentWillUnmount');\n    }\n\n\n\n    render() {\n      console.log('render',this.state)\n      var planetList;\n\n      if (this.state !=null){\n        planetList = <ul>\n          {this.state.apiResult.results.map((planet) => {return <PlanetDetail key={planet.url} planet={planet} />})}\n        </ul>\n      }\n\n    return (<div className=\"planet-list\">\n        <h1>Planet List</h1>\n          {planetList}\n        </div>)\n    }\n  }\n\n  SW.PlanetListComponent = PlanetListComponent;\n\n}());\n"]}