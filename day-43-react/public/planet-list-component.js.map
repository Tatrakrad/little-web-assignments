{"version":3,"sources":["planet-list-component.js"],"names":["window","SW","PlanetDetail","props","value","state","isSelected","setState","selectedClass","planetInfo","planetDetail","orbital_period","rotation_period","diameter","climate","gravity","React","Component","PlanetListComponent","apiResult","console","log","$","ajax","url","data","page","done","fail","alert","loadPlanets","planetList","results","map","planet","name"],"mappings":";;;;;;;;;;AAAAA,OAAOC,EAAP,GAAYD,OAAOC,EAAP,IAAa,EAAzB;;AAEC,aAAW;AAAA,MAEJC,YAFI;AAAA;;AAIR,0BAAYC,KAAZ,EAAkB;AAAA;;AAChBA,YAAMC,KAAN,GAAcD,MAAMC,KAAN,IAAe,EAA7B;;AADgB,8HAEVD,KAFU;;AAIhB,YAAKE,KAAL,GAAa;AACXC,oBAAW;AADA,OAAb;AAJgB;AAOjB;;AAXO;AAAA;AAAA,+BAaA;AACN,aAAKC,QAAL,CAAc;AACZD,sBAAY,CAAC,KAAKD,KAAL,CAAWC;AADZ,SAAd;AAGD;AAjBO;AAAA;AAAA,+BAmBA;AACN,YAAIE,aAAJ;;AAEA,YAAG,KAAKH,KAAL,CAAWC,UAAd,EAAyB;AACvBE,2BAAiB,IAAjB;;AAEAC,uBAAa;AAAA;AAAA,cAAK,WAAU,aAAf;AACX;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAoB,qBAAKC,YAAL,CAAkBC;AAAtC,eADF;AAEE;AAAA;AAAA;AAAA;AAAqB,qBAAKD,YAAL,CAAkBE;AAAvC,eAFF;AAGE;AAAA;AAAA;AAAA;AAAc,qBAAKF,YAAL,CAAkBG;AAAhC,eAHF;AAIE;AAAA;AAAA;AAAA;AAAa,qBAAKH,YAAL,CAAkBI;AAA/B,eAJF;AAKE;AAAA;AAAA;AAAA;AAAa,qBAAKJ,YAAL,CAAkBK;AAA/B;AALF;AADW,WAAb;AASD;;AAID,eAAON,UAAP;AACD;AAvCO;;AAAA;AAAA,IAEiBO,MAAMC,SAFvB;;AAAA,MA6CJC,mBA7CI;AAAA;;AA+CR,mCAAa;AAAA;;AAAA;;AAGX,aAAKb,KAAL,GAAa;AACXc,mBAAU;AADC,OAAb;;AAHW;AAOZ;;AAtDO;AAAA;AAAA,oCAwDM;AAAA;;AAEZC,gBAAQC,GAAR,CAAY,kBAAZ;;AAEAC,UAAEC,IAAF,CAAO;AACLC,eAAK,6BADA;AAELC,gBAAM,EAACC,MAAK,CAAN;AAFD,SAAP,EAICC,IAJD,CAIM,UAACF,IAAD,EAAU;AACdL,kBAAQC,GAAR,CAAY,uBAAZ,EAAoCI,IAApC;AACA,iBAAKlB,QAAL,CAAc;AACZY,uBAAUM;AADE,WAAd;AAGD,SATD,EAUCG,IAVD,CAUM,YAAM;AACVR,kBAAQC,GAAR,CAAY,aAAZ;AACArB,iBAAO6B,KAAP,CAAa,UAAb;AACD,SAbD;AAgBD,OA5EO,CA4EP;;AA5EO;AAAA;AAAA,0CA8EY;;AAElBT,gBAAQC,GAAR,CAAY,uCAAZ;;AAEA,aAAKS,WAAL;AACD;AAnFO;AAAA;AAAA,6CAoFc;AACpBV,gBAAQC,GAAR,CAAY,0CAAZ;AACD;AAtFO;AAAA;AAAA,+BA0FC;AACPD,gBAAQC,GAAR,CAAY,QAAZ,EAAqB,KAAKhB,KAA1B;AACA,YAAI0B,UAAJ;;AAEA,YAAI,KAAK1B,KAAL,CAAWc,SAAX,CAAqBa,OAArB,IAA+B,IAAnC,EAAwC;AACtCD,uBAAa;AAAA;AAAA;AACV,iBAAK1B,KAAL,CAAWc,SAAX,CAAqBa,OAArB,CAA6BC,GAA7B,CAAiC,UAACC,MAAD,EAAY;AAAC,qBAAO;AAAA;AAAA,kBAAI,KAAKA,OAAOV,GAAhB;AAAA;AAAgCU,uBAAOC;AAAvC,eAAP;AAAyD,aAAvG;AADU,WAAb;AAGD;;AAEH,eAAQ;AAAA;AAAA,YAAK,WAAU,aAAf;AACJ;AAAA;AAAA;AAAA;AAAA,WADI;AAEDJ;AAFC,SAAR;AAIC;AAxGO;;AAAA;AAAA,IA6CwBf,MAAMC,SA7C9B;;AA2GVhB,KAAGiB,mBAAH,GAAyBA,mBAAzB;AAED,CA7GA,GAAD","file":"planet-list-component.js","sourcesContent":["window.SW = window.SW || { };\n\n(function() {\n\n  class PlanetDetail extends React.Component {\n\n    constructor(props){\n      props.value = props.value || \"\";\n      super(props);\n\n      this.state = {\n        isSelected:false\n      }\n    }\n\n    toggle(){\n      this.setState({\n        isSelected: !this.state.isSelected\n      })\n    }\n\n    render(){\n      var selectedClass;\n\n      if(this.state.isSelected){\n        selectedClass += \"on\";\n\n        planetInfo = <div className=\"planet-info\">\n          <ul>\n            <li>Orbital Period {this.planetDetail.orbital_period}</li>\n            <li>Rotation Period {this.planetDetail.rotation_period}</li>\n            <li>Diameter {this.planetDetail.diameter}</li>\n            <li>Climate {this.planetDetail.climate}</li>\n            <li>Gravity {this.planetDetail.gravity}</li>\n          </ul>\n        </div>\n      }\n\n\n\n      return planetInfo;\n    }\n\n\n  }\n\n\n  class PlanetListComponent extends React.Component {\n\n    constructor(){\n      super();\n\n      this.state = {\n        apiResult:{ }\n      }\n\n    }\n\n    loadPlanets() {\n\n      console.log('load the planets');\n\n      $.ajax({\n        url: 'http://swapi.co/api/planets',\n        data: {page:1}\n      })\n      .done((data) => {\n        console.log('Now, I have Data Now.',data);\n        this.setState({\n          apiResult:data\n        });\n      })\n      .fail(() => {\n        console.log('ajax failed');\n        window.alert('trouble!');\n      })\n\n\n    }//end of loadPlanets function\n\n    componentDidMount() {\n\n      console.log('PlanetListComponent.componentDidMount');\n\n      this.loadPlanets();\n    }\n    componentWillUnmount(){\n      console.log('PlanetListComponent.componentWillUnmount');\n    }\n\n\n\n    render() {\n      console.log('render',this.state)\n      var planetList;\n\n      if (this.state.apiResult.results !=null){\n        planetList = <ul>\n          {this.state.apiResult.results.map((planet) => {return <li key={planet.url}>It&apos;s {planet.name}</li>})}\n         </ul>\n      }\n\n    return (<div className=\"planet-list\">\n        <h1>Planet List</h1>\n          {planetList}\n        </div>)\n    }\n  }\n\n  SW.PlanetListComponent = PlanetListComponent;\n\n}());\n"]}