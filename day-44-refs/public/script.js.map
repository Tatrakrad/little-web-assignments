{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","AppComponent","theInput","focus","query","$","ajax","url","data","q","value","done","console","log","evt","getData","keyCode","target","theDomElement","click","keyUpHappened","React","Component","ReactDOM","render"],"mappings":";;;;;;;;;;AAAA,IAAIA,YAAYC,SAASC,aAAT,CAAuB,aAAvB,CAAhB;;IAEMC,Y;;;;;;;;;;;wCAGe;AACjB,WAAKC,QAAL,CAAcC,KAAd;AACD;;;4BAEOC,K,EAAM;AACZC,QAAEC,IAAF,CAAO;AACLC,aAAK,qCADA;AAELC,cAAK,EAACC,GAAE,KAAKP,QAAL,CAAcQ,KAAjB;AAFA,OAAP,EAICC,IAJD,CAIM,UAACH,IAAD,EAAS;AACbI,gBAAQC,GAAR,CAAY,WAAZ,EAAwBL,IAAxB;AACD,OAND;AAOD;;;0BAEKM,G,EAAI;AACRF,cAAQC,GAAR,CAAY,WAAZ,EAAyB,KAAKX,QAA9B,EAAwC,KAAKA,QAAL,CAAcQ,KAAtD;AACA,WAAKK,OAAL,CAAa,KAAKb,QAAL,CAAcQ,KAA3B;AACD;;AAED;;;;kCACcI,G,EAAI;AAChBF,cAAQC,GAAR,CAAYC,IAAIE,OAAhB;AACA,UAAIF,IAAIE,OAAJ,KAAgB,EAApB,EAAuB;AACrB,aAAKD,OAAL,CAAaD,IAAIG,MAAJ,CAAWP,KAAxB;AACD;AACF;;;6BAGQ;AAAA;;AACP,aAAQ;AAAA;AAAA;AAAA;AACN,uCAAO,aAAY,iBAAnB,EAAqC,KAAK,aAACQ,aAAD,EAAmB;AAAC,mBAAKhB,QAAL,GAAgBgB,aAAhB;AAAgC,WAA9F,GADM;AAEN;AAAA;AAAA,YAAQ,SAAS,mBAAM;AAAC,qBAAKC,KAAL;AAAe,aAAvC;AAAA;AAAA,SAFM;AAIN;AACA,uBAAY,gCADZ;AAEA,mBAAS,iBAACL,GAAD,EAAS;AAAC,mBAAKM,aAAL,CAAmBN,GAAnB;AAAyB;AAF5C;AAJM,OAAR;AASD;;;;EAzCwBO,MAAMC,S;;AA4CjCC,SAASC,MAAT,CAAgB,oBAAC,YAAD,OAAhB,EAAkC1B,SAAlC","file":"script.js","sourcesContent":["var mountNode = document.querySelector('#react-root');\n\nclass AppComponent extends React.Component {\n\n\n  componentDidMount(){\n    this.theInput.focus();\n  }\n\n  getData(query){\n    $.ajax({\n      url: 'https://api.github.com/search/users',\n      data:{q:this.theInput.value}\n    })\n    .done((data)=> {\n      console.log('got data!',data);\n    });\n  }\n\n  click(evt){\n    console.log('the input', this.theInput, this.theInput.value);\n    this.getData(this.theInput.value);\n  }\n\n  //exectue when key up happens, so you can use regular argument variables instead of state\n  keyUpHappened(evt){\n    console.log(evt.keyCode);\n    if (evt.keyCode === 13){\n      this.getData(evt.target.value);\n    }\n  }\n\n\n  render() {\n    return (<div>React works!\n      <input placeholder=\"input goes here\" ref={(theDomElement) => {this.theInput = theDomElement; }}/>\n      <button onClick={() => {this.click(); }}> focus,bro </button>\n\n      <input\n      placeholder=\"put something in and hit enter\"\n      onKeyUp={(evt) => {this.keyUpHappened(evt);}}\n      />\n    </div>);\n  }\n}\n\nReactDOM.render(<AppComponent />, mountNode);\n"]}