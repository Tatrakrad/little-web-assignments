{"version":3,"sources":["script.js"],"names":["mountNode","document","querySelector","auth","btoa","pageNum","query","InterfaceComponent","evt","console","log","keyCode","target","value","setState","request","doSearch","state","keyUpHappened","React","Component","GithubRepos","searchRepos","props","$","ajax","type","url","data","q","page","dataType","async","headers","done","repoData","apiResult","fail","window","alert","searchResults","items","map","repo","id","name","owner","login","AppComponent","ReactDOM","render"],"mappings":"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","file":"script.js","sourcesContent":["(function() {\n\n  var mountNode = document.querySelector('#react-root');\n  var auth = btoa(\"4d892accbfd6b61cb0118fe2a5ce0baeebe5dad7\");\n\n  //placeholder\n  var pageNum=1;\n  var query=\"blue boomerang\";\n\n  class InterfaceComponent extends React.Component {\n\n    constructor(){\n      super();\n    }\n\n    keyUpHappened(evt){\n      console.log(evt.keyCode);\n      if (evt.keyCode === 13){\n        console.log(evt.target.value);\n        // GithubRepos.searchRepos(evt.target.value);\n        this.setState({\n          request:evt.target.value\n        })\n      }\n    }\n\n    render(){\n      var doSearch;\n\n      if (this.state !== null){\n        doSearch = <GithubRepos query={this.state.request}/>;\n      }\n\n      return (<div className=\"search-box\">\n        <input className = \"repo-input\"\n        placeholder=\"Type a repo name and hit Enter\"\n        onKeyUp={(evt) => {this.keyUpHappened(evt)}}/>\n        {doSearch}\n      </div>);\n    }\n\n  }\n\n  class GithubRepos extends React.Component {\n\n    constructor(){\n      super();\n\n    }\n\n    componentDidMount(){\n      console.log('component mounted');\n      this.searchRepos(this.props.query);\n    }\n\n    searchRepos(query){\n      $.ajax({\n        type: 'GET',\n        url: \"https://api.github.com/search/repositories\",\n        data:{q:query, page:pageNum},\n        dataType: 'JSON',\n        async:true,\n        headers:{\n          \"Authorization\": \"Basic \" + auth\n        },\n      })\n      .done((repoData) => {\n        //test\n        console.log(\"recieved data ==>\", repoData);\n        //\n        this.setState({\n          apiResult:repoData\n        })\n      })\n      .fail(() => {\n        console.log(\"API Call Failure\");\n        window.alert('API FAILURE');\n      });\n\n    }\n\n    render(){\n      var searchResults;\n\n      if (this.state != null){\n        searchResults =\n         <ul>\n          {this.state.apiResult.items.map((repo) => {return (\n            <li key={repo.id}>\n              <div>{repo.name}</div>\n              <div>{repo.owner.login}</div>\n            </li>\n          )})}\n        </ul>;\n      }\n\n      return <div className=\"repos-list\"> {searchResults} </div>\n    }\n  }\n\n  class AppComponent extends React.Component {\n    render() {\n      return (<div>React works!\n        <InterfaceComponent />\n      </div>);\n    }\n  }\n\n  ReactDOM.render(<AppComponent />, mountNode);\n\n\n}());\n"]}